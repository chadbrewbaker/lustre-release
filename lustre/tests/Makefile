# Makefile.in generated by automake 1.15 from Makefile.am.
# lustre/tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/lustre
pkgincludedir = $(includedir)/lustre
pkglibdir = $(libdir)/lustre
pkglibexecdir = $(libexecdir)/lustre
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin18.7.0
host_triplet = x86_64-apple-darwin18.7.0
target_triplet = x86_64-apple-darwin18.7.0
bin_PROGRAMS = mcreate$(EXEEXT) munlink$(EXEEXT)
test_PROGRAMS = $(am__EXEEXT_1)
subdir = lustre/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(testdir)" \
	"$(DESTDIR)$(testdir)" "$(DESTDIR)$(testdir)" \
	"$(DESTDIR)$(testdir)" "$(DESTDIR)$(testdir)"
am__EXEEXT_1 = openunlink$(EXEEXT) truncate$(EXEEXT) directio$(EXEEXT) \
	writeme$(EXEEXT) mlink$(EXEEXT) utime$(EXEEXT) tchmod$(EXEEXT) \
	fsx$(EXEEXT) test_brw$(EXEEXT) sendfile$(EXEEXT) \
	createmany$(EXEEXT) chownmany$(EXEEXT) statmany$(EXEEXT) \
	multifstat$(EXEEXT) createtest$(EXEEXT) opendirunlink$(EXEEXT) \
	opendevunlink$(EXEEXT) unlinkmany$(EXEEXT) checkstat$(EXEEXT) \
	statone$(EXEEXT) runas$(EXEEXT) openfile$(EXEEXT) \
	rmdirmany$(EXEEXT) smalliomany$(EXEEXT) small_write$(EXEEXT) \
	multiop$(EXEEXT) ll_sparseness_verify$(EXEEXT) \
	ll_sparseness_write$(EXEEXT) mrename$(EXEEXT) \
	ll_dirstripe_verify$(EXEEXT) mkdirmany$(EXEEXT) \
	openfilleddirunlink$(EXEEXT) rename_many$(EXEEXT) \
	memhog$(EXEEXT) mmap_sanity$(EXEEXT) writemany$(EXEEXT) \
	reads$(EXEEXT) flocks_test$(EXEEXT) flock_deadlock$(EXEEXT) \
	write_time_limit$(EXEEXT) rwv$(EXEEXT) \
	lgetxattr_size_check$(EXEEXT) checkfiemap$(EXEEXT) \
	listxattr_size_check$(EXEEXT) check_fhandle_syscalls$(EXEEXT) \
	badarea_io$(EXEEXT) llapi_layout_test$(EXEEXT) \
	orphan_linkea_check$(EXEEXT) llapi_hsm_test$(EXEEXT) \
	group_lock_test$(EXEEXT) llapi_fid_test$(EXEEXT) \
	sendfile_grouplock$(EXEEXT) mmap_cat$(EXEEXT) \
	swap_lock_test$(EXEEXT) lockahead_test$(EXEEXT) \
	mirror_io$(EXEEXT) mmap_mknod_test$(EXEEXT) \
	create_foreign_file$(EXEEXT) parse_foreign_file$(EXEEXT) \
	create_foreign_dir$(EXEEXT) parse_foreign_dir$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(test_PROGRAMS)
badarea_io_SOURCES = badarea_io.c
badarea_io_OBJECTS = badarea_io.$(OBJEXT)
badarea_io_LDADD = $(LDADD)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
check_fhandle_syscalls_SOURCES = check_fhandle_syscalls.c
check_fhandle_syscalls_OBJECTS = check_fhandle_syscalls.$(OBJEXT)
check_fhandle_syscalls_LDADD = $(LDADD)
checkfiemap_SOURCES = checkfiemap.c
checkfiemap_OBJECTS = checkfiemap.$(OBJEXT)
checkfiemap_LDADD = $(LDADD)
checkstat_SOURCES = checkstat.c
checkstat_OBJECTS = checkstat.$(OBJEXT)
checkstat_LDADD = $(LDADD)
chownmany_SOURCES = chownmany.c
chownmany_OBJECTS = chownmany.$(OBJEXT)
chownmany_LDADD = $(LDADD)
create_foreign_dir_SOURCES = create_foreign_dir.c
create_foreign_dir_OBJECTS = create_foreign_dir.$(OBJEXT)
create_foreign_dir_DEPENDENCIES = $(LIBLUSTREAPI)
create_foreign_file_SOURCES = create_foreign_file.c
create_foreign_file_OBJECTS = create_foreign_file.$(OBJEXT)
create_foreign_file_LDADD = $(LDADD)
createmany_SOURCES = createmany.c
createmany_OBJECTS = createmany.$(OBJEXT)
createmany_LDADD = $(LDADD)
createtest_SOURCES = createtest.c
createtest_OBJECTS = createtest.$(OBJEXT)
createtest_LDADD = $(LDADD)
directio_SOURCES = directio.c
directio_OBJECTS = directio.$(OBJEXT)
directio_LDADD = $(LDADD)
flock_deadlock_SOURCES = flock_deadlock.c
flock_deadlock_OBJECTS = flock_deadlock.$(OBJEXT)
flock_deadlock_LDADD = $(LDADD)
flocks_test_SOURCES = flocks_test.c
flocks_test_OBJECTS = flocks_test.$(OBJEXT)
am__DEPENDENCIES_1 =
flocks_test_DEPENDENCIES = $(LIBLUSTREAPI) \
	$(am__DEPENDENCIES_1)
fsx_SOURCES = fsx.c
fsx_OBJECTS = fsx.$(OBJEXT)
fsx_LDADD = $(LDADD)
group_lock_test_SOURCES = group_lock_test.c
group_lock_test_OBJECTS = group_lock_test.$(OBJEXT)
group_lock_test_DEPENDENCIES = $(LIBLUSTREAPI)
lgetxattr_size_check_SOURCES = lgetxattr_size_check.c
lgetxattr_size_check_OBJECTS = lgetxattr_size_check.$(OBJEXT)
lgetxattr_size_check_LDADD = $(LDADD)
listxattr_size_check_SOURCES = listxattr_size_check.c
listxattr_size_check_OBJECTS = listxattr_size_check.$(OBJEXT)
listxattr_size_check_LDADD = $(LDADD)
ll_dirstripe_verify_SOURCES = ll_dirstripe_verify.c
ll_dirstripe_verify_OBJECTS = ll_dirstripe_verify.$(OBJEXT)
ll_dirstripe_verify_DEPENDENCIES = $(LIBLUSTREAPI)
ll_sparseness_verify_SOURCES = ll_sparseness_verify.c
ll_sparseness_verify_OBJECTS = ll_sparseness_verify.$(OBJEXT)
ll_sparseness_verify_LDADD = $(LDADD)
ll_sparseness_write_SOURCES = ll_sparseness_write.c
ll_sparseness_write_OBJECTS = ll_sparseness_write.$(OBJEXT)
ll_sparseness_write_LDADD = $(LDADD)
llapi_fid_test_SOURCES = llapi_fid_test.c
llapi_fid_test_OBJECTS = llapi_fid_test.$(OBJEXT)
llapi_fid_test_DEPENDENCIES = $(LIBLUSTREAPI)
llapi_hsm_test_SOURCES = llapi_hsm_test.c
llapi_hsm_test_OBJECTS = llapi_hsm_test.$(OBJEXT)
llapi_hsm_test_DEPENDENCIES = $(LIBLUSTREAPI)
llapi_layout_test_SOURCES = llapi_layout_test.c
llapi_layout_test_OBJECTS = llapi_layout_test.$(OBJEXT)
llapi_layout_test_DEPENDENCIES = $(LIBLUSTREAPI)
lockahead_test_SOURCES = lockahead_test.c
lockahead_test_OBJECTS = lockahead_test.$(OBJEXT)
lockahead_test_DEPENDENCIES = $(LIBLUSTREAPI)
mcreate_SOURCES = mcreate.c
mcreate_OBJECTS = mcreate.$(OBJEXT)
mcreate_LDADD = $(LDADD)
memhog_SOURCES = memhog.c
memhog_OBJECTS = memhog.$(OBJEXT)
memhog_LDADD = $(LDADD)
mirror_io_SOURCES = mirror_io.c
mirror_io_OBJECTS = mirror_io.$(OBJEXT)
mirror_io_DEPENDENCIES = $(LIBLUSTREAPI)
mkdirmany_SOURCES = mkdirmany.c
mkdirmany_OBJECTS = mkdirmany.$(OBJEXT)
mkdirmany_LDADD = $(LDADD)
mlink_SOURCES = mlink.c
mlink_OBJECTS = mlink.$(OBJEXT)
mlink_LDADD = $(LDADD)
mmap_cat_SOURCES = mmap_cat.c
mmap_cat_OBJECTS = mmap_cat.$(OBJEXT)
mmap_cat_LDADD = $(LDADD)
mmap_mknod_test_SOURCES = mmap_mknod_test.c
mmap_mknod_test_OBJECTS = mmap_mknod_test.$(OBJEXT)
mmap_mknod_test_LDADD = $(LDADD)
mmap_sanity_SOURCES = mmap_sanity.c
mmap_sanity_OBJECTS = mmap_sanity.$(OBJEXT)
mmap_sanity_DEPENDENCIES = $(LIBLUSTREAPI)
mrename_SOURCES = mrename.c
mrename_OBJECTS = mrename.$(OBJEXT)
mrename_LDADD = $(LDADD)
multifstat_SOURCES = multifstat.c
multifstat_OBJECTS = multifstat.$(OBJEXT)
multifstat_LDADD = $(LDADD)
multiop_SOURCES = multiop.c
multiop_OBJECTS = multiop.$(OBJEXT)
multiop_DEPENDENCIES = $(LIBLUSTREAPI) \
	$(am__DEPENDENCIES_1)
munlink_SOURCES = munlink.c
munlink_OBJECTS = munlink.$(OBJEXT)
munlink_LDADD = $(LDADD)
opendevunlink_SOURCES = opendevunlink.c
opendevunlink_OBJECTS = opendevunlink.$(OBJEXT)
opendevunlink_LDADD = $(LDADD)
opendirunlink_SOURCES = opendirunlink.c
opendirunlink_OBJECTS = opendirunlink.$(OBJEXT)
opendirunlink_LDADD = $(LDADD)
openfile_SOURCES = openfile.c
openfile_OBJECTS = openfile.$(OBJEXT)
openfile_LDADD = $(LDADD)
openfilleddirunlink_SOURCES = openfilleddirunlink.c
openfilleddirunlink_OBJECTS = openfilleddirunlink.$(OBJEXT)
openfilleddirunlink_LDADD = $(LDADD)
openunlink_SOURCES = openunlink.c
openunlink_OBJECTS = openunlink.$(OBJEXT)
openunlink_LDADD = $(LDADD)
orphan_linkea_check_SOURCES = orphan_linkea_check.c
orphan_linkea_check_OBJECTS = orphan_linkea_check.$(OBJEXT)
orphan_linkea_check_LDADD = $(LDADD)
parse_foreign_dir_SOURCES = parse_foreign_dir.c
parse_foreign_dir_OBJECTS = parse_foreign_dir.$(OBJEXT)
parse_foreign_dir_LDADD = $(LDADD)
parse_foreign_file_SOURCES = parse_foreign_file.c
parse_foreign_file_OBJECTS = parse_foreign_file.$(OBJEXT)
parse_foreign_file_LDADD = $(LDADD)
reads_SOURCES = reads.c
reads_OBJECTS = reads.$(OBJEXT)
reads_LDADD = $(LDADD)
rename_many_SOURCES = rename_many.c
rename_many_OBJECTS = rename_many.$(OBJEXT)
rename_many_LDADD = $(LDADD)
rmdirmany_SOURCES = rmdirmany.c
rmdirmany_OBJECTS = rmdirmany.$(OBJEXT)
rmdirmany_LDADD = $(LDADD)
runas_SOURCES = runas.c
runas_OBJECTS = runas.$(OBJEXT)
runas_LDADD = $(LDADD)
rwv_SOURCES = rwv.c
rwv_OBJECTS = rwv.$(OBJEXT)
rwv_DEPENDENCIES = $(LIBLUSTREAPI)
sendfile_SOURCES = sendfile.c
sendfile_OBJECTS = sendfile.$(OBJEXT)
sendfile_LDADD = $(LDADD)
sendfile_grouplock_SOURCES = sendfile_grouplock.c
sendfile_grouplock_OBJECTS = sendfile_grouplock.$(OBJEXT)
sendfile_grouplock_DEPENDENCIES = $(LIBLUSTREAPI)
small_write_SOURCES = small_write.c
small_write_OBJECTS = small_write.$(OBJEXT)
small_write_LDADD = $(LDADD)
smalliomany_SOURCES = smalliomany.c
smalliomany_OBJECTS = smalliomany.$(OBJEXT)
smalliomany_LDADD = $(LDADD)
statmany_SOURCES = statmany.c
statmany_OBJECTS = statmany.$(OBJEXT)
statmany_DEPENDENCIES = $(LIBLUSTREAPI)
statone_SOURCES = statone.c
statone_OBJECTS = statone.$(OBJEXT)
statone_DEPENDENCIES = $(LIBLUSTREAPI)
swap_lock_test_SOURCES = swap_lock_test.c
swap_lock_test_OBJECTS = swap_lock_test.$(OBJEXT)
swap_lock_test_DEPENDENCIES = $(LIBLUSTREAPI)
tchmod_SOURCES = tchmod.c
tchmod_OBJECTS = tchmod.$(OBJEXT)
tchmod_LDADD = $(LDADD)
test_brw_SOURCES = test_brw.c
test_brw_OBJECTS = test_brw.$(OBJEXT)
test_brw_LDADD = $(LDADD)
truncate_SOURCES = truncate.c
truncate_OBJECTS = truncate.$(OBJEXT)
truncate_LDADD = $(LDADD)
unlinkmany_SOURCES = unlinkmany.c
unlinkmany_OBJECTS = unlinkmany.$(OBJEXT)
unlinkmany_LDADD = $(LDADD)
utime_SOURCES = utime.c
utime_OBJECTS = utime.$(OBJEXT)
utime_LDADD = $(LDADD)
write_time_limit_SOURCES = write_time_limit.c
write_time_limit_OBJECTS = write_time_limit.$(OBJEXT)
write_time_limit_LDADD = $(LDADD)
writemany_SOURCES = writemany.c
writemany_OBJECTS = writemany.$(OBJEXT)
writemany_LDADD = $(LDADD)
writeme_SOURCES = writeme.c
writeme_OBJECTS = writeme.$(OBJEXT)
writeme_LDADD = $(LDADD)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(nobase_noinst_SCRIPTS) $(nobase_test_SCRIPTS) \
	$(noinst_SCRIPTS) $(test_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = badarea_io.c check_fhandle_syscalls.c checkfiemap.c \
	checkstat.c chownmany.c create_foreign_dir.c \
	create_foreign_file.c createmany.c createtest.c directio.c \
	flock_deadlock.c flocks_test.c fsx.c group_lock_test.c \
	lgetxattr_size_check.c listxattr_size_check.c \
	ll_dirstripe_verify.c ll_sparseness_verify.c \
	ll_sparseness_write.c llapi_fid_test.c llapi_hsm_test.c \
	llapi_layout_test.c lockahead_test.c mcreate.c memhog.c \
	mirror_io.c mkdirmany.c mlink.c mmap_cat.c mmap_mknod_test.c \
	mmap_sanity.c mrename.c multifstat.c multiop.c munlink.c \
	opendevunlink.c opendirunlink.c openfile.c \
	openfilleddirunlink.c openunlink.c orphan_linkea_check.c \
	parse_foreign_dir.c parse_foreign_file.c reads.c rename_many.c \
	rmdirmany.c runas.c rwv.c sendfile.c sendfile_grouplock.c \
	small_write.c smalliomany.c statmany.c statone.c \
	swap_lock_test.c tchmod.c test_brw.c truncate.c unlinkmany.c \
	utime.c write_time_limit.c writemany.c writeme.c
DIST_SOURCES = badarea_io.c check_fhandle_syscalls.c checkfiemap.c \
	checkstat.c chownmany.c create_foreign_dir.c \
	create_foreign_file.c createmany.c createtest.c directio.c \
	flock_deadlock.c flocks_test.c fsx.c group_lock_test.c \
	lgetxattr_size_check.c listxattr_size_check.c \
	ll_dirstripe_verify.c ll_sparseness_verify.c \
	ll_sparseness_write.c llapi_fid_test.c llapi_hsm_test.c \
	llapi_layout_test.c lockahead_test.c mcreate.c memhog.c \
	mirror_io.c mkdirmany.c mlink.c mmap_cat.c mmap_mknod_test.c \
	mmap_sanity.c mrename.c multifstat.c multiop.c munlink.c \
	opendevunlink.c opendirunlink.c openfile.c \
	openfilleddirunlink.c openunlink.c orphan_linkea_check.c \
	parse_foreign_dir.c parse_foreign_file.c reads.c rename_many.c \
	rmdirmany.c runas.c rwv.c sendfile.c sendfile_grouplock.c \
	small_write.c smalliomany.c statmany.c statone.c \
	swap_lock_test.c tchmod.c test_brw.c truncate.c unlinkmany.c \
	utime.c write_time_limit.c writemany.c writeme.c
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(nobase_noinst_DATA) $(nobase_test_DATA) $(noinst_DATA) \
	$(test_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/config/depcomp \
	README
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /Users/crb002/github/lustre-release/config/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /Users/crb002/github/lustre-release/config/missing autoconf
AUTOCONF_HDIR = 
AUTOHEADER = ${SHELL} /Users/crb002/github/lustre-release/config/missing autoheader
AUTOMAKE = ${SHELL} /Users/crb002/github/lustre-release/config/missing automake-1.15
AWK = awk
BASH_COMPLETION_DIR = ${datarootdir}/bash-completion/completions
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -Wall -fPIC -D_GNU_SOURCE
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -Werror
CONFIG_INCLUDE = 
CPP = gcc -E
CPPFLAGS = -include /Users/crb002/github/lustre-release/undef.h -include /Users/crb002/github/lustre-release/config.h -I/Users/crb002/github/lustre-release/libcfs/include -I/Users/crb002/github/lustre-release/lnet/include -I/Users/crb002/github/lustre-release/lnet/include/uapi -I/Users/crb002/github/lustre-release/lustre/include -I/Users/crb002/github/lustre-release/lustre/include/uapi 
CYGPATH_W = echo
DEBUGFS = debugfs
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
DUMPE2FS = dumpe2fs
E2FSCK = e2fsck
E2FSPROGS = e2fsprogs
E2LABEL = e2label
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
ENABLEO2IB = 
ENABLE_DOC = 0
ENABLE_GSS = 
ENABLE_LDISKFS = no
ENABLE_SERVER = no
ENABLE_ZFS = no
EXEEXT = 
EXT4_SRC_DIR = 
EXTRA_KCFLAGS = -include /Users/crb002/github/lustre-release/undef.h -include /Users/crb002/github/lustre-release/config.h  -g -I/Users/crb002/github/lustre-release/libcfs/include -I/Users/crb002/github/lustre-release/lnet/include -I/Users/crb002/github/lustre-release/lustre/include -Wno-format-truncation -Wno-stringop-truncation -Wno-stringop-overflow
EXTRA_OFED_CONFIG = 
EXTRA_OFED_INCLUDE = 
EXTRA_SYMBOLS = 
FGREP = /usr/bin/grep -F
GNICPPFLAGS = 
GNILND = 
GREP = /usr/bin/grep
INCLUDE_RULES = include /Users/crb002/github/lustre-release/Rules
INSTALL = /usr/local/bin/ginstall -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
K5VERS = 
KMODEXT = 
KMP_MODDIR = 
KRBCFLAGS = 
KRBDIR = 
KRBLDFLAGS = 
KRBLIBS = 
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS = 
LDISKFS_SERIES = 
LDISKFS_SUBDIR = 
LDLIBMOUNT = 
LIBCFS_INCLUDE_DIR = libcfs/include
LIBCFS_SUBDIR = libcfs
LIBEFENCE = 
LIBOBJS = 
LIBREADLINE = -lreadline
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LINUX = 
LINUXRELEASE = 
LINUX_CONFIG = 
LINUX_OBJ = 
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
LUSTRE = /Users/crb002/github/lustre-release/lustre
LUSTREIOKIT_SUBDIR = lustre-iokit
MAINT = 
MAKEINFO = ${SHELL} /Users/crb002/github/lustre-release/config/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/local/bin/gmkdir -p
MKE2FS = mke2fs
MODULE_TARGET = 
MOSTLYCLEANFILES = .*.cmd .*.flags *.o *.ko *.mod.c .depend .*.1.* Modules.symvers Module.symvers
MPICC_WRAPPER = mpicc
MPI_BIN = /usr/local/bin
NET_SNMP_CFLAGS = -DNETSNMP_ENABLE_IPV6 -fno-strict-aliasing -g -Os -pipe -DBUILD=161 -DMACOSX_DEPLOYMENT_TARGET=10.14 -F/BuildRoot/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.Internal.sdk/System/Library/PrivateFrameworks/ -F/BuildRoot/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.Internal.sdk/System/Library/Frameworks/ -I/usr/local/libressl/include -Udarwin18 -Ddarwin18=darwin18 -I/usr/local/include
NET_SNMP_CONFIG = net-snmp-config
NET_SNMP_LIBS = -lnetsnmpmibs -lnetsnmpagent -lnetsnmp -lcrypto.35
NM = /usr/bin/nm -B
NMEDIT = nmedit
O2IBLND = 
O2IBPATH = 
OBJDUMP = objdump
OBJEXT = o
OSDADDON = 
OTOOL = otool
OTOOL64 = :
PACKAGE = lustre
PACKAGE_BUGREPORT = https://jira.whamcloud.com/
PACKAGE_NAME = Lustre
PACKAGE_STRING = Lustre 2.12.58_104_g279c264_dirty
PACKAGE_TARNAME = lustre
PACKAGE_URL = 
PACKAGE_VERSION = 2.12.58_104_g279c264_dirty
PATCHED_INTEGRITY_INTF = 
PATH_SEPARATOR = :
PFSCK = fsck
PKG_CONFIG = /usr/local/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PTHREAD_LIBS = -lpthread
RANLIB = ranlib
RPMBUILD = 
RPMBUILD_BINARY_ARGS =  --without lustre_modules --without servers --without ldiskfs --without snmp
SED = /usr/bin/sed
SELINUX = 
SET_MAKE = 
SHELL = /bin/sh
SNMP_DIST_SUBDIR = snmp
SNMP_SUBDIR = 
SPL = 
SPL_OBJ = 
SPL_VERSION = 
STRIP = strip
SYMVERFILE = 
TUNE2FS = tune2fs
VERSION = 2.12.58_104_g279c264_dirty
VERSION_HDIR = 
ZFS = 
ZFS_LIBZFS_INCLUDE = 
ZFS_LIBZFS_LDFLAGS = 
ZFS_LIBZFS_LIBS = 
ZFS_OBJ = 
ZFS_VERSION = 
abs_builddir = /Users/crb002/github/lustre-release/lustre/tests
abs_srcdir = /Users/crb002/github/lustre-release/lustre/tests
abs_top_builddir = /Users/crb002/github/lustre-release
abs_top_srcdir = /Users/crb002/github/lustre-release
ac_configure_args = 
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
agentdir = ${pkglibdir}/snmp
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin18.7.0
build_alias = 
build_cpu = x86_64
build_os = darwin18.7.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
demodir = $(docdir)/demo
docdir = ${datadir}/doc/$(PACKAGE)
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin18.7.0
host_alias = 
host_cpu = x86_64
host_os = darwin18.7.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/crb002/github/lustre-release/config/install-sh
lb_target_os = 
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mibdir = ${pkgdatadir}/snmp/mibs
mkdir_p = $(MKDIR_P)
modulefsdir = 
modulenetdir = 
oldincludedir = /usr/include
patch_avail = 
pdfdir = ${docdir}
pkgexampledir = ${pkgdatadir}/examples
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
quilt_avail = 
rootsbindir = /sbin
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /etc
systemdsystemunitdir = 
target = x86_64-apple-darwin18.7.0
target_alias = 
target_cpu = x86_64
target_os = darwin18.7.0
target_vendor = apple
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..

# Lustre test Makefile
AM_CFLAGS := -fPIC -D_GNU_SOURCE \
	     -D_LARGEFILE64_SOURCE=1 -D_FILE_OFFSET_BITS=64

DIST_SUBDIRS = mpi
noinst_DATA = disk1_8_up_2_5-ldiskfs.tar.bz2 \
	disk2_1_up_2_5-ldiskfs.tar.bz2 disk2_3_up_2_5-ldiskfs.tar.bz2 \
	disk2_4-ldiskfs.tar.bz2 disk2_4-zfs.tar.bz2 \
	disk2_7-ldiskfs.tar.bz2 disk2_7-zfs.tar.bz2 \
	disk2_9-zfs.tar.bz2 disk2_9-ldiskfs.tar.bz2 \
	ldiskfs_mdt1_2_11.tar.bz2 ldiskfs_mdt2_2_11.tar.bz2 \
	ldiskfs_ost1_2_11.tar.bz2 ldiskfs_ost2_2_11.tar.bz2 \
	zfs_mdt1_2_11.tar.bz2 zfs_mdt2_2_11.tar.bz2 \
	zfs_ost1_2_11.tar.bz2 zfs_ost2_2_11.tar.bz2
noinst_SCRIPTS = leak_finder.pl llmount.sh llmountcleanup.sh \
	functions.sh test-framework.sh runvmstat runiozone runtests \
	sanity.sh rundbench acceptance-small.sh compile.sh \
	conf-sanity.sh insanity.sh oos.sh oos2.sh dne_sanity.sh \
	recovery-small.sh replay-dual.sh sanity-quota.sh \
	replay-ost-single.sh replay-single.sh run-llog.sh sanityn.sh \
	large-scale.sh racer.sh replay-vbr.sh performance-sanity.sh \
	mdsrate-create-small.sh mdsrate-create-large.sh \
	mdsrate-lookup-1dir.sh mdsrate-lookup-10dirs.sh \
	sanity-benchmark.sh mdsrate-stat-small.sh \
	mdsrate-stat-large.sh lockorder.sh socketclient socketserver \
	runmultiop_bg_pause sanity-sec.sh sanity-gss.sh \
	sanity-selinux.sh sanity-krb5.sh krb5_login.sh \
	setup_kerberos.sh recovery-mds-scale.sh run_dd.sh run_tar.sh \
	run_iozone.sh run_dbench.sh run_IOR.sh \
	recovery-double-scale.sh recovery-random-scale.sh \
	parallel-scale.sh metadata-updates.sh lustre-rsync-test.sh \
	ost-pools.sh rpc.sh yaml.sh lnet-selftest.sh \
	obdfilter-survey.sh mmp.sh mmp_mark.sh sgpdd-survey.sh \
	maloo_upload.sh auster setup-nfs.sh mds-survey.sh \
	parallel-scale-nfs.sh large-lun.sh parallel-scale-nfsv3.sh \
	parallel-scale-nfsv4.sh setup-cifs.sh parallel-scale-cifs.sh \
	posix.sh sanity-scrub.sh scrub-performance.sh ha.sh \
	sanity-lfsck.sh lfsck-performance.sh resolveip sanity-hsm.sh \
	sanity-lsnapshot.sh sanity-pfl.sh sanity-flr.sh sanity-dom.sh \
	sanity-pcc.sh dom-performance.sh sanity-lnet.sh
nobase_noinst_SCRIPTS = cfg/local.sh test-groups/regression \
	test-groups/regression-mpi acl/make-tree acl/run cfg/ncli.sh \
	racer/dir_create.sh racer/file_create.sh racer/file_list.sh \
	racer/file_rm.sh racer/racer.sh racer/file_concat.sh \
	racer/file_exec.sh racer/file_link.sh racer/file_rename.sh \
	racer/file_symlink.sh racer/dir_remote.sh racer/dir_migrate.sh \
	racer/file_chmod.sh racer/file_chown.sh racer/file_delxattr.sh \
	racer/file_getxattr.sh racer/file_mknod.sh \
	racer/file_setxattr.sh racer/file_truncate.sh \
	racer/lss_create.sh racer/lss_destroy.sh posix/posix.cfg
nobase_noinst_DATA = acl/cp.test acl/getfacl-noacl.test \
	acl/inheritance.test acl/misc.test acl/permissions.test \
	acl/setfacl.test acl/permissions_xattr.test acl/974.test \
	acl/974_remote.test acl/2561.test acl/2561_zfs.test \
	acl/4924.test clientapi/simple_test.c
EXTRA_DIST = $(noinst_SCRIPTS) $(noinst_DATA) \
             $(nobase_noinst_SCRIPTS) $(nobase_noinst_DATA)

THETESTS = openunlink truncate directio writeme mlink utime tchmod fsx \
	test_brw sendfile createmany chownmany statmany multifstat \
	createtest opendirunlink opendevunlink unlinkmany checkstat \
	statone runas openfile rmdirmany smalliomany small_write \
	multiop ll_sparseness_verify ll_sparseness_write mrename \
	ll_dirstripe_verify mkdirmany openfilleddirunlink rename_many \
	memhog mmap_sanity writemany reads flocks_test flock_deadlock \
	write_time_limit rwv lgetxattr_size_check checkfiemap \
	listxattr_size_check check_fhandle_syscalls badarea_io \
	llapi_layout_test orphan_linkea_check llapi_hsm_test \
	group_lock_test llapi_fid_test sendfile_grouplock mmap_cat \
	swap_lock_test lockahead_test mirror_io mmap_mknod_test \
	create_foreign_file parse_foreign_file create_foreign_dir \
	parse_foreign_dir
SUBDIRS = mpi
testdir = $(libdir)/lustre/tests
test_SCRIPTS = $(noinst_SCRIPTS)
nobase_test_SCRIPTS = $(nobase_noinst_SCRIPTS)
test_DATA = $(noinst_DATA)
nobase_test_DATA = $(nobase_noinst_DATA)
LIBLUSTREAPI = $(top_builddir)/lustre/utils/liblustreapi.la
mmap_sanity_LDADD = $(LIBLUSTREAPI)
multiop_LDADD = $(LIBLUSTREAPI) $(PTHREAD_LIBS)
llapi_layout_test_LDADD = $(LIBLUSTREAPI)
llapi_hsm_test_LDADD = $(LIBLUSTREAPI)
group_lock_test_LDADD = $(LIBLUSTREAPI)
llapi_fid_test_LDADD = $(LIBLUSTREAPI)
sendfile_grouplock_LDADD = $(LIBLUSTREAPI)
swap_lock_test_LDADD = $(LIBLUSTREAPI)
statmany_LDADD = $(LIBLUSTREAPI)
statone_LDADD = $(LIBLUSTREAPI)
rwv_LDADD = $(LIBLUSTREAPI)
lockahead_test_LDADD = $(LIBLUSTREAPI)
mirror_io_LDADD = $(LIBLUSTREAPI)
ll_dirstripe_verify_LDADD = $(LIBLUSTREAPI)
flocks_test_LDADD = $(LIBLUSTREAPI) $(PTHREAD_LIBS)
create_foreign_dir_LDADD = $(LIBLUSTREAPI)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu lustre/tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu lustre/tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-testPROGRAMS: $(test_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(test_PROGRAMS)'; test -n "$(testdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(testdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(testdir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(testdir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(testdir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-testPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(test_PROGRAMS)'; test -n "$(testdir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(testdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(testdir)" && rm -f $$files

clean-testPROGRAMS:
	@list='$(test_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

badarea_io$(EXEEXT): $(badarea_io_OBJECTS) $(badarea_io_DEPENDENCIES) $(EXTRA_badarea_io_DEPENDENCIES) 
	@rm -f badarea_io$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(badarea_io_OBJECTS) $(badarea_io_LDADD) $(LIBS)

check_fhandle_syscalls$(EXEEXT): $(check_fhandle_syscalls_OBJECTS) $(check_fhandle_syscalls_DEPENDENCIES) $(EXTRA_check_fhandle_syscalls_DEPENDENCIES) 
	@rm -f check_fhandle_syscalls$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_fhandle_syscalls_OBJECTS) $(check_fhandle_syscalls_LDADD) $(LIBS)

checkfiemap$(EXEEXT): $(checkfiemap_OBJECTS) $(checkfiemap_DEPENDENCIES) $(EXTRA_checkfiemap_DEPENDENCIES) 
	@rm -f checkfiemap$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(checkfiemap_OBJECTS) $(checkfiemap_LDADD) $(LIBS)

checkstat$(EXEEXT): $(checkstat_OBJECTS) $(checkstat_DEPENDENCIES) $(EXTRA_checkstat_DEPENDENCIES) 
	@rm -f checkstat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(checkstat_OBJECTS) $(checkstat_LDADD) $(LIBS)

chownmany$(EXEEXT): $(chownmany_OBJECTS) $(chownmany_DEPENDENCIES) $(EXTRA_chownmany_DEPENDENCIES) 
	@rm -f chownmany$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(chownmany_OBJECTS) $(chownmany_LDADD) $(LIBS)

create_foreign_dir$(EXEEXT): $(create_foreign_dir_OBJECTS) $(create_foreign_dir_DEPENDENCIES) $(EXTRA_create_foreign_dir_DEPENDENCIES) 
	@rm -f create_foreign_dir$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(create_foreign_dir_OBJECTS) $(create_foreign_dir_LDADD) $(LIBS)

create_foreign_file$(EXEEXT): $(create_foreign_file_OBJECTS) $(create_foreign_file_DEPENDENCIES) $(EXTRA_create_foreign_file_DEPENDENCIES) 
	@rm -f create_foreign_file$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(create_foreign_file_OBJECTS) $(create_foreign_file_LDADD) $(LIBS)

createmany$(EXEEXT): $(createmany_OBJECTS) $(createmany_DEPENDENCIES) $(EXTRA_createmany_DEPENDENCIES) 
	@rm -f createmany$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(createmany_OBJECTS) $(createmany_LDADD) $(LIBS)

createtest$(EXEEXT): $(createtest_OBJECTS) $(createtest_DEPENDENCIES) $(EXTRA_createtest_DEPENDENCIES) 
	@rm -f createtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(createtest_OBJECTS) $(createtest_LDADD) $(LIBS)

directio$(EXEEXT): $(directio_OBJECTS) $(directio_DEPENDENCIES) $(EXTRA_directio_DEPENDENCIES) 
	@rm -f directio$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(directio_OBJECTS) $(directio_LDADD) $(LIBS)

flock_deadlock$(EXEEXT): $(flock_deadlock_OBJECTS) $(flock_deadlock_DEPENDENCIES) $(EXTRA_flock_deadlock_DEPENDENCIES) 
	@rm -f flock_deadlock$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(flock_deadlock_OBJECTS) $(flock_deadlock_LDADD) $(LIBS)

flocks_test$(EXEEXT): $(flocks_test_OBJECTS) $(flocks_test_DEPENDENCIES) $(EXTRA_flocks_test_DEPENDENCIES) 
	@rm -f flocks_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(flocks_test_OBJECTS) $(flocks_test_LDADD) $(LIBS)

fsx$(EXEEXT): $(fsx_OBJECTS) $(fsx_DEPENDENCIES) $(EXTRA_fsx_DEPENDENCIES) 
	@rm -f fsx$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fsx_OBJECTS) $(fsx_LDADD) $(LIBS)

group_lock_test$(EXEEXT): $(group_lock_test_OBJECTS) $(group_lock_test_DEPENDENCIES) $(EXTRA_group_lock_test_DEPENDENCIES) 
	@rm -f group_lock_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(group_lock_test_OBJECTS) $(group_lock_test_LDADD) $(LIBS)

lgetxattr_size_check$(EXEEXT): $(lgetxattr_size_check_OBJECTS) $(lgetxattr_size_check_DEPENDENCIES) $(EXTRA_lgetxattr_size_check_DEPENDENCIES) 
	@rm -f lgetxattr_size_check$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lgetxattr_size_check_OBJECTS) $(lgetxattr_size_check_LDADD) $(LIBS)

listxattr_size_check$(EXEEXT): $(listxattr_size_check_OBJECTS) $(listxattr_size_check_DEPENDENCIES) $(EXTRA_listxattr_size_check_DEPENDENCIES) 
	@rm -f listxattr_size_check$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(listxattr_size_check_OBJECTS) $(listxattr_size_check_LDADD) $(LIBS)

ll_dirstripe_verify$(EXEEXT): $(ll_dirstripe_verify_OBJECTS) $(ll_dirstripe_verify_DEPENDENCIES) $(EXTRA_ll_dirstripe_verify_DEPENDENCIES) 
	@rm -f ll_dirstripe_verify$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ll_dirstripe_verify_OBJECTS) $(ll_dirstripe_verify_LDADD) $(LIBS)

ll_sparseness_verify$(EXEEXT): $(ll_sparseness_verify_OBJECTS) $(ll_sparseness_verify_DEPENDENCIES) $(EXTRA_ll_sparseness_verify_DEPENDENCIES) 
	@rm -f ll_sparseness_verify$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ll_sparseness_verify_OBJECTS) $(ll_sparseness_verify_LDADD) $(LIBS)

ll_sparseness_write$(EXEEXT): $(ll_sparseness_write_OBJECTS) $(ll_sparseness_write_DEPENDENCIES) $(EXTRA_ll_sparseness_write_DEPENDENCIES) 
	@rm -f ll_sparseness_write$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ll_sparseness_write_OBJECTS) $(ll_sparseness_write_LDADD) $(LIBS)

llapi_fid_test$(EXEEXT): $(llapi_fid_test_OBJECTS) $(llapi_fid_test_DEPENDENCIES) $(EXTRA_llapi_fid_test_DEPENDENCIES) 
	@rm -f llapi_fid_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(llapi_fid_test_OBJECTS) $(llapi_fid_test_LDADD) $(LIBS)

llapi_hsm_test$(EXEEXT): $(llapi_hsm_test_OBJECTS) $(llapi_hsm_test_DEPENDENCIES) $(EXTRA_llapi_hsm_test_DEPENDENCIES) 
	@rm -f llapi_hsm_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(llapi_hsm_test_OBJECTS) $(llapi_hsm_test_LDADD) $(LIBS)

llapi_layout_test$(EXEEXT): $(llapi_layout_test_OBJECTS) $(llapi_layout_test_DEPENDENCIES) $(EXTRA_llapi_layout_test_DEPENDENCIES) 
	@rm -f llapi_layout_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(llapi_layout_test_OBJECTS) $(llapi_layout_test_LDADD) $(LIBS)

lockahead_test$(EXEEXT): $(lockahead_test_OBJECTS) $(lockahead_test_DEPENDENCIES) $(EXTRA_lockahead_test_DEPENDENCIES) 
	@rm -f lockahead_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lockahead_test_OBJECTS) $(lockahead_test_LDADD) $(LIBS)

mcreate$(EXEEXT): $(mcreate_OBJECTS) $(mcreate_DEPENDENCIES) $(EXTRA_mcreate_DEPENDENCIES) 
	@rm -f mcreate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mcreate_OBJECTS) $(mcreate_LDADD) $(LIBS)

memhog$(EXEEXT): $(memhog_OBJECTS) $(memhog_DEPENDENCIES) $(EXTRA_memhog_DEPENDENCIES) 
	@rm -f memhog$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(memhog_OBJECTS) $(memhog_LDADD) $(LIBS)

mirror_io$(EXEEXT): $(mirror_io_OBJECTS) $(mirror_io_DEPENDENCIES) $(EXTRA_mirror_io_DEPENDENCIES) 
	@rm -f mirror_io$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mirror_io_OBJECTS) $(mirror_io_LDADD) $(LIBS)

mkdirmany$(EXEEXT): $(mkdirmany_OBJECTS) $(mkdirmany_DEPENDENCIES) $(EXTRA_mkdirmany_DEPENDENCIES) 
	@rm -f mkdirmany$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mkdirmany_OBJECTS) $(mkdirmany_LDADD) $(LIBS)

mlink$(EXEEXT): $(mlink_OBJECTS) $(mlink_DEPENDENCIES) $(EXTRA_mlink_DEPENDENCIES) 
	@rm -f mlink$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mlink_OBJECTS) $(mlink_LDADD) $(LIBS)

mmap_cat$(EXEEXT): $(mmap_cat_OBJECTS) $(mmap_cat_DEPENDENCIES) $(EXTRA_mmap_cat_DEPENDENCIES) 
	@rm -f mmap_cat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mmap_cat_OBJECTS) $(mmap_cat_LDADD) $(LIBS)

mmap_mknod_test$(EXEEXT): $(mmap_mknod_test_OBJECTS) $(mmap_mknod_test_DEPENDENCIES) $(EXTRA_mmap_mknod_test_DEPENDENCIES) 
	@rm -f mmap_mknod_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mmap_mknod_test_OBJECTS) $(mmap_mknod_test_LDADD) $(LIBS)

mmap_sanity$(EXEEXT): $(mmap_sanity_OBJECTS) $(mmap_sanity_DEPENDENCIES) $(EXTRA_mmap_sanity_DEPENDENCIES) 
	@rm -f mmap_sanity$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mmap_sanity_OBJECTS) $(mmap_sanity_LDADD) $(LIBS)

mrename$(EXEEXT): $(mrename_OBJECTS) $(mrename_DEPENDENCIES) $(EXTRA_mrename_DEPENDENCIES) 
	@rm -f mrename$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mrename_OBJECTS) $(mrename_LDADD) $(LIBS)

multifstat$(EXEEXT): $(multifstat_OBJECTS) $(multifstat_DEPENDENCIES) $(EXTRA_multifstat_DEPENDENCIES) 
	@rm -f multifstat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(multifstat_OBJECTS) $(multifstat_LDADD) $(LIBS)

multiop$(EXEEXT): $(multiop_OBJECTS) $(multiop_DEPENDENCIES) $(EXTRA_multiop_DEPENDENCIES) 
	@rm -f multiop$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(multiop_OBJECTS) $(multiop_LDADD) $(LIBS)

munlink$(EXEEXT): $(munlink_OBJECTS) $(munlink_DEPENDENCIES) $(EXTRA_munlink_DEPENDENCIES) 
	@rm -f munlink$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(munlink_OBJECTS) $(munlink_LDADD) $(LIBS)

opendevunlink$(EXEEXT): $(opendevunlink_OBJECTS) $(opendevunlink_DEPENDENCIES) $(EXTRA_opendevunlink_DEPENDENCIES) 
	@rm -f opendevunlink$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(opendevunlink_OBJECTS) $(opendevunlink_LDADD) $(LIBS)

opendirunlink$(EXEEXT): $(opendirunlink_OBJECTS) $(opendirunlink_DEPENDENCIES) $(EXTRA_opendirunlink_DEPENDENCIES) 
	@rm -f opendirunlink$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(opendirunlink_OBJECTS) $(opendirunlink_LDADD) $(LIBS)

openfile$(EXEEXT): $(openfile_OBJECTS) $(openfile_DEPENDENCIES) $(EXTRA_openfile_DEPENDENCIES) 
	@rm -f openfile$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openfile_OBJECTS) $(openfile_LDADD) $(LIBS)

openfilleddirunlink$(EXEEXT): $(openfilleddirunlink_OBJECTS) $(openfilleddirunlink_DEPENDENCIES) $(EXTRA_openfilleddirunlink_DEPENDENCIES) 
	@rm -f openfilleddirunlink$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openfilleddirunlink_OBJECTS) $(openfilleddirunlink_LDADD) $(LIBS)

openunlink$(EXEEXT): $(openunlink_OBJECTS) $(openunlink_DEPENDENCIES) $(EXTRA_openunlink_DEPENDENCIES) 
	@rm -f openunlink$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openunlink_OBJECTS) $(openunlink_LDADD) $(LIBS)

orphan_linkea_check$(EXEEXT): $(orphan_linkea_check_OBJECTS) $(orphan_linkea_check_DEPENDENCIES) $(EXTRA_orphan_linkea_check_DEPENDENCIES) 
	@rm -f orphan_linkea_check$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(orphan_linkea_check_OBJECTS) $(orphan_linkea_check_LDADD) $(LIBS)

parse_foreign_dir$(EXEEXT): $(parse_foreign_dir_OBJECTS) $(parse_foreign_dir_DEPENDENCIES) $(EXTRA_parse_foreign_dir_DEPENDENCIES) 
	@rm -f parse_foreign_dir$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(parse_foreign_dir_OBJECTS) $(parse_foreign_dir_LDADD) $(LIBS)

parse_foreign_file$(EXEEXT): $(parse_foreign_file_OBJECTS) $(parse_foreign_file_DEPENDENCIES) $(EXTRA_parse_foreign_file_DEPENDENCIES) 
	@rm -f parse_foreign_file$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(parse_foreign_file_OBJECTS) $(parse_foreign_file_LDADD) $(LIBS)

reads$(EXEEXT): $(reads_OBJECTS) $(reads_DEPENDENCIES) $(EXTRA_reads_DEPENDENCIES) 
	@rm -f reads$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(reads_OBJECTS) $(reads_LDADD) $(LIBS)

rename_many$(EXEEXT): $(rename_many_OBJECTS) $(rename_many_DEPENDENCIES) $(EXTRA_rename_many_DEPENDENCIES) 
	@rm -f rename_many$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rename_many_OBJECTS) $(rename_many_LDADD) $(LIBS)

rmdirmany$(EXEEXT): $(rmdirmany_OBJECTS) $(rmdirmany_DEPENDENCIES) $(EXTRA_rmdirmany_DEPENDENCIES) 
	@rm -f rmdirmany$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rmdirmany_OBJECTS) $(rmdirmany_LDADD) $(LIBS)

runas$(EXEEXT): $(runas_OBJECTS) $(runas_DEPENDENCIES) $(EXTRA_runas_DEPENDENCIES) 
	@rm -f runas$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(runas_OBJECTS) $(runas_LDADD) $(LIBS)

rwv$(EXEEXT): $(rwv_OBJECTS) $(rwv_DEPENDENCIES) $(EXTRA_rwv_DEPENDENCIES) 
	@rm -f rwv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rwv_OBJECTS) $(rwv_LDADD) $(LIBS)

sendfile$(EXEEXT): $(sendfile_OBJECTS) $(sendfile_DEPENDENCIES) $(EXTRA_sendfile_DEPENDENCIES) 
	@rm -f sendfile$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sendfile_OBJECTS) $(sendfile_LDADD) $(LIBS)

sendfile_grouplock$(EXEEXT): $(sendfile_grouplock_OBJECTS) $(sendfile_grouplock_DEPENDENCIES) $(EXTRA_sendfile_grouplock_DEPENDENCIES) 
	@rm -f sendfile_grouplock$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sendfile_grouplock_OBJECTS) $(sendfile_grouplock_LDADD) $(LIBS)

small_write$(EXEEXT): $(small_write_OBJECTS) $(small_write_DEPENDENCIES) $(EXTRA_small_write_DEPENDENCIES) 
	@rm -f small_write$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(small_write_OBJECTS) $(small_write_LDADD) $(LIBS)

smalliomany$(EXEEXT): $(smalliomany_OBJECTS) $(smalliomany_DEPENDENCIES) $(EXTRA_smalliomany_DEPENDENCIES) 
	@rm -f smalliomany$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(smalliomany_OBJECTS) $(smalliomany_LDADD) $(LIBS)

statmany$(EXEEXT): $(statmany_OBJECTS) $(statmany_DEPENDENCIES) $(EXTRA_statmany_DEPENDENCIES) 
	@rm -f statmany$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(statmany_OBJECTS) $(statmany_LDADD) $(LIBS)

statone$(EXEEXT): $(statone_OBJECTS) $(statone_DEPENDENCIES) $(EXTRA_statone_DEPENDENCIES) 
	@rm -f statone$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(statone_OBJECTS) $(statone_LDADD) $(LIBS)

swap_lock_test$(EXEEXT): $(swap_lock_test_OBJECTS) $(swap_lock_test_DEPENDENCIES) $(EXTRA_swap_lock_test_DEPENDENCIES) 
	@rm -f swap_lock_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(swap_lock_test_OBJECTS) $(swap_lock_test_LDADD) $(LIBS)

tchmod$(EXEEXT): $(tchmod_OBJECTS) $(tchmod_DEPENDENCIES) $(EXTRA_tchmod_DEPENDENCIES) 
	@rm -f tchmod$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tchmod_OBJECTS) $(tchmod_LDADD) $(LIBS)

test_brw$(EXEEXT): $(test_brw_OBJECTS) $(test_brw_DEPENDENCIES) $(EXTRA_test_brw_DEPENDENCIES) 
	@rm -f test_brw$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_brw_OBJECTS) $(test_brw_LDADD) $(LIBS)

truncate$(EXEEXT): $(truncate_OBJECTS) $(truncate_DEPENDENCIES) $(EXTRA_truncate_DEPENDENCIES) 
	@rm -f truncate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(truncate_OBJECTS) $(truncate_LDADD) $(LIBS)

unlinkmany$(EXEEXT): $(unlinkmany_OBJECTS) $(unlinkmany_DEPENDENCIES) $(EXTRA_unlinkmany_DEPENDENCIES) 
	@rm -f unlinkmany$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unlinkmany_OBJECTS) $(unlinkmany_LDADD) $(LIBS)

utime$(EXEEXT): $(utime_OBJECTS) $(utime_DEPENDENCIES) $(EXTRA_utime_DEPENDENCIES) 
	@rm -f utime$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(utime_OBJECTS) $(utime_LDADD) $(LIBS)

write_time_limit$(EXEEXT): $(write_time_limit_OBJECTS) $(write_time_limit_DEPENDENCIES) $(EXTRA_write_time_limit_DEPENDENCIES) 
	@rm -f write_time_limit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(write_time_limit_OBJECTS) $(write_time_limit_LDADD) $(LIBS)

writemany$(EXEEXT): $(writemany_OBJECTS) $(writemany_DEPENDENCIES) $(EXTRA_writemany_DEPENDENCIES) 
	@rm -f writemany$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(writemany_OBJECTS) $(writemany_LDADD) $(LIBS)

writeme$(EXEEXT): $(writeme_OBJECTS) $(writeme_DEPENDENCIES) $(EXTRA_writeme_DEPENDENCIES) 
	@rm -f writeme$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(writeme_OBJECTS) $(writeme_LDADD) $(LIBS)
install-nobase_testSCRIPTS: $(nobase_test_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(nobase_test_SCRIPTS)'; test -n "$(testdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(testdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(testdir)" || exit 1; \
	fi; \
	$(am__nobase_strip_setup); \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e "s|$$srcdirstrip/||" -e 'h;s|[^/]*$$||; s|^$$|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	  case $$type in \
	  d) echo " $(MKDIR_P) '$(DESTDIR)$(testdir)/$$dir'"; \
	     $(MKDIR_P) "$(DESTDIR)$(testdir)/$$dir" || exit $$?;; \
	  f) \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(testdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(testdir)$$dir" || exit $$?; \
	     } \
	  ;; esac \
	; done

uninstall-nobase_testSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_test_SCRIPTS)'; test -n "$(testdir)" || exit 0; \
	$(am__nobase_strip_setup); \
	files=`$(am__nobase_strip) \
	       -e 'h;s,.*/,,;$(transform);x;s|[^/]*$$||;G;s,\n,,'`; \
	dir='$(DESTDIR)$(testdir)'; $(am__uninstall_files_from_dir)
install-testSCRIPTS: $(test_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(test_SCRIPTS)'; test -n "$(testdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(testdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(testdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(testdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(testdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-testSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(test_SCRIPTS)'; test -n "$(testdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(testdir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/badarea_io.Po
include ./$(DEPDIR)/check_fhandle_syscalls.Po
include ./$(DEPDIR)/checkfiemap.Po
include ./$(DEPDIR)/checkstat.Po
include ./$(DEPDIR)/chownmany.Po
include ./$(DEPDIR)/create_foreign_dir.Po
include ./$(DEPDIR)/create_foreign_file.Po
include ./$(DEPDIR)/createmany.Po
include ./$(DEPDIR)/createtest.Po
include ./$(DEPDIR)/directio.Po
include ./$(DEPDIR)/flock_deadlock.Po
include ./$(DEPDIR)/flocks_test.Po
include ./$(DEPDIR)/fsx.Po
include ./$(DEPDIR)/group_lock_test.Po
include ./$(DEPDIR)/lgetxattr_size_check.Po
include ./$(DEPDIR)/listxattr_size_check.Po
include ./$(DEPDIR)/ll_dirstripe_verify.Po
include ./$(DEPDIR)/ll_sparseness_verify.Po
include ./$(DEPDIR)/ll_sparseness_write.Po
include ./$(DEPDIR)/llapi_fid_test.Po
include ./$(DEPDIR)/llapi_hsm_test.Po
include ./$(DEPDIR)/llapi_layout_test.Po
include ./$(DEPDIR)/lockahead_test.Po
include ./$(DEPDIR)/mcreate.Po
include ./$(DEPDIR)/memhog.Po
include ./$(DEPDIR)/mirror_io.Po
include ./$(DEPDIR)/mkdirmany.Po
include ./$(DEPDIR)/mlink.Po
include ./$(DEPDIR)/mmap_cat.Po
include ./$(DEPDIR)/mmap_mknod_test.Po
include ./$(DEPDIR)/mmap_sanity.Po
include ./$(DEPDIR)/mrename.Po
include ./$(DEPDIR)/multifstat.Po
include ./$(DEPDIR)/multiop.Po
include ./$(DEPDIR)/munlink.Po
include ./$(DEPDIR)/opendevunlink.Po
include ./$(DEPDIR)/opendirunlink.Po
include ./$(DEPDIR)/openfile.Po
include ./$(DEPDIR)/openfilleddirunlink.Po
include ./$(DEPDIR)/openunlink.Po
include ./$(DEPDIR)/orphan_linkea_check.Po
include ./$(DEPDIR)/parse_foreign_dir.Po
include ./$(DEPDIR)/parse_foreign_file.Po
include ./$(DEPDIR)/reads.Po
include ./$(DEPDIR)/rename_many.Po
include ./$(DEPDIR)/rmdirmany.Po
include ./$(DEPDIR)/runas.Po
include ./$(DEPDIR)/rwv.Po
include ./$(DEPDIR)/sendfile.Po
include ./$(DEPDIR)/sendfile_grouplock.Po
include ./$(DEPDIR)/small_write.Po
include ./$(DEPDIR)/smalliomany.Po
include ./$(DEPDIR)/statmany.Po
include ./$(DEPDIR)/statone.Po
include ./$(DEPDIR)/swap_lock_test.Po
include ./$(DEPDIR)/tchmod.Po
include ./$(DEPDIR)/test_brw.Po
include ./$(DEPDIR)/truncate.Po
include ./$(DEPDIR)/unlinkmany.Po
include ./$(DEPDIR)/utime.Po
include ./$(DEPDIR)/write_time_limit.Po
include ./$(DEPDIR)/writemany.Po
include ./$(DEPDIR)/writeme.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-nobase_testDATA: $(nobase_test_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nobase_test_DATA)'; test -n "$(testdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(testdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(testdir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(testdir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(testdir)/$$dir"; }; \
	    echo " $(INSTALL_DATA) $$xfiles '$(DESTDIR)$(testdir)/$$dir'"; \
	    $(INSTALL_DATA) $$xfiles "$(DESTDIR)$(testdir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_testDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_test_DATA)'; test -n "$(testdir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(testdir)'; $(am__uninstall_files_from_dir)
install-testDATA: $(test_DATA)
	@$(NORMAL_INSTALL)
	@list='$(test_DATA)'; test -n "$(testdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(testdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(testdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(testdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(testdir)" || exit $$?; \
	done

uninstall-testDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(test_DATA)'; test -n "$(testdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(testdir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(testdir)" "$(DESTDIR)$(testdir)" "$(DESTDIR)$(testdir)" "$(DESTDIR)$(testdir)" "$(DESTDIR)$(testdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-testPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-nobase_testDATA install-nobase_testSCRIPTS \
	install-testDATA install-testPROGRAMS install-testSCRIPTS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-nobase_testDATA \
	uninstall-nobase_testSCRIPTS uninstall-testDATA \
	uninstall-testPROGRAMS uninstall-testSCRIPTS

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-binPROGRAMS clean-generic clean-libtool \
	clean-testPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-nobase_testDATA \
	install-nobase_testSCRIPTS install-pdf install-pdf-am \
	install-ps install-ps-am install-strip install-testDATA \
	install-testPROGRAMS install-testSCRIPTS installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-nobase_testDATA uninstall-nobase_testSCRIPTS \
	uninstall-testDATA uninstall-testPROGRAMS \
	uninstall-testSCRIPTS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
